@using PAW2.Models.PAW2Models
@model IEnumerable<PAW2.Models.Inventory>

@{
    ViewData["Title"] = "Index";
}

<h1>Inventories Page</h1>
<hr />
<button id="openDrawer" class="btn btn-small rounded">Advanced Search</button>
<button class="btn btn-small rounded" data-bs-toggle="modal" data-bs-target="#createModal">Create New Inventory</button>



<table class="table table-condensed table-bordered table-dark table-hover">
    <thead>
        <tr>
            <th>ID</th>
            <th>Unit Price</th>
            <th>Units In Stock</th>
            <th>Last Updated</th>
            <th>Date Added</th>
            <th>Modified By</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var c in Model)
        {
            <tr>
                <td><input type="text" class="form-control" name="inventoryId" value="@c.InventoryId" /></td>
                <td><input type="text" class="form-control" name="unitPrice" value="@c.UnitPrice" /></td>
                <td><input type="text" class="form-control" name="unitsInStock" value="@c.UnitsInStock" /></td>
                <td><input type="date" class="form-control" name="lastUpdated" value="@c.LastUpdated" /></td>
                <td><input type="date" class="form-control" name="dateAdded" value="@c.DateAdded" /></td>
                <td><input type="text" class="form-control" name="modifiedBy" value="@c.ModifiedBy" /></td>
                <td>
                    <div class="btn-container">
                        <button onclick="save(this)" class="btn">
                            <svg fill="#ffffff" width="40" height="40" viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">
                                <g fill-rule="evenodd">
                                    <path d="M65.456 48.385c10.02 0 96.169-.355 96.169-.355 2.209-.009 5.593.749 7.563 1.693 0 0-1.283-1.379.517.485 1.613 1.67 35.572 36.71 36.236 37.416.665.707.241.332.241.332.924 2.007 1.539 5.48 1.539 7.691v95.612c0 7.083-8.478 16.618-16.575 16.618-8.098 0-118.535-.331-126.622-.331-8.087 0-16-6.27-16.356-16.1-.356-9.832.356-118.263.356-126.8 0-8.536 6.912-16.261 16.932-16.261zm-1.838 17.853l.15 121c.003 2.198 1.8 4.003 4.012 4.015l120.562.638a3.971 3.971 0 0 0 4-3.981l-.143-90.364c-.001-1.098-.649-2.616-1.445-3.388L161.52 65.841c-.801-.776-1.443-.503-1.443.601v35.142c0 3.339-4.635 9.14-8.833 9.14H90.846c-4.6 0-9.56-4.714-9.56-9.14s-.014-35.14-.014-35.14c0-1.104-.892-2.01-1.992-2.023l-13.674-.155a1.968 1.968 0 0 0-1.988 1.972zm32.542.44v27.805c0 1.1.896 2.001 2 2.001h44.701c1.113 0 2-.896 2-2.001V66.679a2.004 2.004 0 0 0-2-2.002h-44.7c-1.114 0-2 .896-2 2.002z" />
                                    <path d="M127.802 119.893c16.176.255 31.833 14.428 31.833 31.728s-14.615 31.782-31.016 31.524c-16.401-.259-32.728-14.764-32.728-31.544s15.735-31.963 31.91-31.708zm-16.158 31.31c0 9.676 7.685 16.882 16.218 16.843 8.534-.039 15.769-7.128 15.812-16.69.043-9.563-7.708-16.351-15.985-16.351-8.276 0-16.045 6.52-16.045 16.197z" />
                                </g>
                            </svg>
                        </button>
                        <button onclick="delete(@c.InventoryId)" class="btn ">
                            <svg width="40" height="40" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M10 11V17" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M14 11V17" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M4 7H20" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M6 7H12H18V18C18 19.6569 16.6569 21 15 21H9C7.34315 21 6 19.6569 6 18V7Z" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @await Html.PartialAsync("Partial/_SearchDrawer", new ConditionViewModel())
</div>

<!-- Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div id="catalogForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="createInventoryLabel">New Inventory</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">

                    <!-- unitPrice Input -->
                    <div class="mb-3">
                        <label for="unitPrice" class="form-label">Unit Price</label>
                        <input for="unitPrice" class="form-control" id="unitPriceInput" required />
                    </div>

                    <!-- unitsInStock Input -->
                    <div class="mb-3">
                        <label for="unitsInStock" class="form-label">Units In Stock</label>
                        <input for="unitsInStock" class="form-control" id="unitsInStockInput" required />
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" id="saveBtn" class="btn btn-primary" onclick="saveFromModalForm()">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <style>
        .not-allowed {
            cursor: not-allowed;
        }
    </style>
    <script>
        function addNewRow() {
            const tbody = document.querySelector("table tbody");

            const newRow = document.createElement("tr");
            newRow.innerHTML = `
            <td><input type="text" class="form-control" name="inventoryId" /></td>
            <td><input type="text" class="form-control" name="unitPrice" /></td>
            <td><input type="text" class="form-control" name="unitsInStock" /></td>

            <td><input type="date" class="form-control" name="lastUpdated" value="${new Date().toISOString().slice(0, 16)}" /></td>
            <td><input type="date" class="form-control" name="dateAdded" value="${new Date().toISOString().slice(0, 16)}" /></td>

            <td><input type="text" class="form-control" name="ModifiedBy" /></td>
            <td>
                <input type="hidden" name="inventoryId" value="0" />
                <button onclick="saveRow(this)" class="btn btn-primary">
                    <svg fill="#000000" width="800px" height="800px" viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">
                        <g fill-rule="evenodd">
                            <path d="M65.456 48.385c10.02 0 96.169-.355 96.169-.355 2.209-.009 5.593.749 7.563 1.693 0 0-1.283-1.379.517.485 1.613 1.67 35.572 36.71 36.236 37.416.665.707.241.332.241.332.924 2.007 1.539 5.48 1.539 7.691v95.612c0 7.083-8.478 16.618-16.575 16.618-8.098 0-118.535-.331-126.622-.331-8.087 0-16-6.27-16.356-16.1-.356-9.832.356-118.263.356-126.8 0-8.536 6.912-16.261 16.932-16.261zm-1.838 17.853l.15 121c.003 2.198 1.8 4.003 4.012 4.015l120.562.638a3.971 3.971 0 0 0 4-3.981l-.143-90.364c-.001-1.098-.649-2.616-1.445-3.388L161.52 65.841c-.801-.776-1.443-.503-1.443.601v35.142c0 3.339-4.635 9.14-8.833 9.14H90.846c-4.6 0-9.56-4.714-9.56-9.14s-.014-35.14-.014-35.14c0-1.104-.892-2.01-1.992-2.023l-13.674-.155a1.968 1.968 0 0 0-1.988 1.972zm32.542.44v27.805c0 1.1.896 2.001 2 2.001h44.701c1.113 0 2-.896 2-2.001V66.679a2.004 2.004 0 0 0-2-2.002h-44.7c-1.114 0-2 .896-2 2.002z"/>
                            <path d="M127.802 119.893c16.176.255 31.833 14.428 31.833 31.728s-14.615 31.782-31.016 31.524c-16.401-.259-32.728-14.764-32.728-31.544s15.735-31.963 31.91-31.708zm-16.158 31.31c0 9.676 7.685 16.882 16.218 16.843 8.534-.039 15.769-7.128 15.812-16.69.043-9.563-7.708-16.351-15.985-16.351-8.276 0-16.045 6.52-16.045 16.197z"/>
                        </g>
                    </svg>
                </button>
            </td>
            <td><button class="btn btn-secondary not-allowed" disabled>Delete</button></td>`;

            tbody.appendChild(newRow);
        }

        function save(button) {
            debugger;

            Swal.fire({
              title: "Do you want to save the changes?",
              showDenyButton: true,
              showCancelButton: true,
              confirmButtonText: "Save",
            }).then((result) => {
              /* Read more about isConfirmed, isDenied below */
              if (result.isConfirmed) {
                  _save()
                  .then(() => {
                        Swal.fire("Saved!", "", "success");
                    })
              } else if (result.isDenied) {
                Swal.fire("Changes are not saved", "", "info");
              }
            });

            function _save() {
                const row = button.closest("tr");
                const item = {
                    inventoryId: row.querySelector('[name="inventoryId"]').value,
                    unitPrice: row.querySelector('[name="unitPrice"]').value,
                    unitsInStock: row.querySelector('[name="unitsInStock"]').value,
                    lastUpdated: row.querySelector('[name="lastUpdated"]').value ?? null,
                    dateAdded: row.querySelector('[name="dateAdded"]').value ?? null,
                    modifiedBy: row.querySelector('[name="modifiedBy"]').value
                };

                fetch('/inventory/Save', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify(item)
                })
                    .then(response => response.json())
                    .then(data => {
                        debugger;
                        console.log("Saved:", data);
                        alert("Row saved successfully!");
                    })
                    .catch(error => {
                        console.error("Error saving row:", error);
                        alert("Failed to save row.");
                    });
            }
        }

        function saveFromModalForm() {
            const item = {
                unitPrice: parseFloat(document.querySelector('#unitPriceInput').value),
                unitsInStock: parseInt(document.querySelector("#unitsInStockInput").value),
                lastUpdated: new Date().toISOString(),
                dateAdded: new Date().toISOString(),
                modifiedBy: "System"
            };

            fetch('/inventory/Save', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                },
                body: JSON.stringify(item)
            })
            .then(response => response.json())
            .then(data => {
                console.log("Saved:", data);
                alert("Row saved successfully");
                location.reload();
            })
            .catch(error => {
                console.error("Error saving row:", error);
                alert("Failed to save row.");
            })
        }     
    </script>
}


